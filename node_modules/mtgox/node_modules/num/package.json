{
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "name": "num",
  "description": "arbitrary precision integer and decimal library in pure javascript",
  "version": "0.2.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/shtylman/node-num.git"
  },
  "keywords": [
    "decimal",
    "num",
    "arithmatic",
    "precision"
  ],
  "main": "num.js",
  "dependencies": {
    "int": "0.1.1"
  },
  "devDependencies": {
    "mocha": ">=1.x.x"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "mocha"
  },
  "contributors": [
    {
      "name": "Roman Shtylman",
      "email": "shtylman@gmail.com"
    },
    {
      "name": "Vadim Graboys",
      "email": "dimva13@gmail.com"
    }
  ],
  "testling": {
    "browsers": [
      "ie8..latest",
      "firefox/15..latest",
      "chrome/22..latest",
      "safari/5.1..latest"
    ],
    "harness": "mocha-tdd",
    "files": "test/*.js"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/shtylman/node-num.png)](http://travis-ci.org/shtylman/node-num)\n\n### Unleash all the numbers!! ###\n\n**num** is an arbitrary size fixed precision library written in pure javascript. Why? Because once you write one library you want to write all the libraries.\n\nLooking for just integers? Check out [int](https://github.com/shtylman/node-int)\n\n## quick and dirty ##\n\n```\nnpm install num\n```\n\n```javascript\nvar num = require('num');\n\nvar foo = num('0.1').add('0.2');\n\n// did it work?\nconsole.log(foo.toString());\n//'0.3' hell yea\n```\n\n## api ##\n\nBesides the **num** function, all of the other methods operate on the objects returned by **num**\n\n### num (value) ###\n> construct a new decimal\n\n> valid values are integers, numbers, or strings\n\n### add (value) ###\n> add {value} to our number and return a new num\n\n### sub (value) ###\n> subtract {value} from our number and return a new num\n\n### mul (value) ###\n> multiply our num by {value} and return a new num\n\n### div (value) ###\n> divide our num by {value} and return a new num\n\n### neg ###\n> return a new num that is the negative\n\n### abs ###\n> return new num that is the absolute value\n\n### abs ###\n> return a new num that is the absolute value\n\n### cmp (value) ###\n> compare our value to {value}\n\n> return 0 if self and value are equal, -1 if self < value, 1 if self > value\n\n### lt (value) ###\n> return true if self < value\n\n### lte (value) ###\n> return true if self <= value\n\n### gt (value) ###\n> return true if self > value\n\n### gte (value) ###\n> return true if self >= value\n\n### eq (value) ###\n> return true if self == value\n\n### ne (value) ###\n> return true if self != value\n\n## browser support\n\n[![browser support](http://ci.testling.com/shtylman/node-num.png)](http://ci.testling.com/shtylman/node-num)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shtylman/node-num/issues"
  },
  "_id": "num@0.2.1",
  "_from": "num@~0.2.0"
}
